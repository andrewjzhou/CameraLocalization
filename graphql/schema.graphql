query GetPost($id:ID!) {
  getPost(id:$id) {
    id
    location {
        ...Location
    }
    active
    timestamp
    username
    viewCount
    descriptor
    altitude
    verAcc
    horAcc
    image {
        ...S3Object
    }
  }
}

subscription OnDeactivatedPost($id: ID!) {
    onUpdatePost(id: $id) {
        id
        active
    }
}


query ListPostsByLocation($lat: Float!, $lon: Float!, $distance: String!) {
    listPostsByLocation(lat: $lat, lon: $lon, distance: $distance) {
        id
        location {
            ...Location
        }
        active
        timestamp
        username
        viewCount
        descriptor
        altitude
        verAcc
        horAcc
        image {
            ...S3Object
        }
    }
}

query ListPostsByLocationLite($lat: Float!, $lon: Float!, $distance: String!) {
    listPostsByLocation(lat: $lat, lon: $lon, distance: $distance) {
        id
        location {
            ...Location
        }
        timestamp
        username
        viewCount
        altitude
        verAcc
        horAcc
    }
}

query QueryMostRecentByUsername($username: String!, $size: Int!) {
    queryMostRecentByUsername(username: $username, size: $size) {
        id
        location {
            ...Location
        }
        timestamp
        image {
            ...S3Object
        }
        viewCount
        active
    }
}

query QueryMostViewedByUsername($username: String!, $size: Int!) {
    queryMostViewedByUsername(username: $username, size: $size) {
        id
        location {
            ...Location
        }  
        timestamp
        image {
            ...S3Object
        }
        viewCount
        active
    }
}


query QueryTotalViewsByUsername($username: String!) {
    queryTotalViewsByUsername(username: $username)
}

fragment Location on Location {
    lat
    lon
}


mutation createPost($input: CreatePostInput!) {
    createPost(input: $input) {
        id
        location {
            ...Location
        }
        active
        timestamp
        username
        viewCount
        descriptor
        image  {
            ...S3Object
        }
        altitude
        verAcc
        horAcc
    }
}

fragment S3Object on S3Object {
    bucket
    key
    region
}

mutation UpdatePost($input: UpdatePostInput!) {
    updatePost(input: $input) {
        id
        location {
            ...Location
        }
        active
        timestamp
        username
        viewCount
        descriptor
        image  {
            ...S3Object
        }
        altitude
        verAcc
        horAcc
    }
}

mutation IncrementViewCount($id:ID!) {
    incrementViewCount(id:$id) {
        id
        viewCount
    }
}

mutation DeletePost($input: DeletePostInput!) {
 deletePost(input: $input){
    id
    location {
        ...Location
    }
    active
    timestamp
    username
 }
}

type Query {
    getPost(id: ID!): Post
    listPosts(first: Int, after: String): PostConnection
    queryPostsByUsernameTimestampIndex(username: String!, first: Int, after: String): PostConnection
    queryPostsByUsernameViewCountIndex(username: String!, first: Int, after: String): PostConnection
    listPostsByLocation(lat: Float!, lon: Float!, distance: String!): [Post]
    queryMostRecentByUsername(username: String!, size: Int!): [Post]
    queryMostViewedByUsername(username: String!, size: Int!): [Post]
    queryTotalViewsByUsername(username: String!): Int
}

type Mutation {
    createPost(input: CreatePostInput!): Post
    updatePost(input: UpdatePostInput!): Post
    deletePost(input: DeletePostInput!): Post
    incrementViewCount(id: ID!): Post
}


